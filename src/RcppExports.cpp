// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/introRcppObjets.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mkDodo1
XPtr<dodo> mkDodo1(int a, int b);
RcppExport SEXP _introRcppObjets_mkDodo1(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mkDodo1(a, b));
    return rcpp_result_gen;
END_RCPP
}
// mkDodo2
XPtr<dodo> mkDodo2(int a, int b);
RcppExport SEXP _introRcppObjets_mkDodo2(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mkDodo2(a, b));
    return rcpp_result_gen;
END_RCPP
}
// printDodo1
void printDodo1(XPtr<dodo> xpDodo);
RcppExport SEXP _introRcppObjets_printDodo1(SEXP xpDodoSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr<dodo> >::type xpDodo(xpDodoSEXP);
    printDodo1(xpDodo);
    return R_NilValue;
END_RCPP
}
// printDodo2
void printDodo2(XPtr<dodo> xpDodo);
RcppExport SEXP _introRcppObjets_printDodo2(SEXP xpDodoSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr<dodo> >::type xpDodo(xpDodoSEXP);
    printDodo2(xpDodo);
    return R_NilValue;
END_RCPP
}
// mkRDV
XPtr<rdv> mkRDV(std::string lieu, int h, int m, int s);
RcppExport SEXP _introRcppObjets_mkRDV(SEXP lieuSEXP, SEXP hSEXP, SEXP mSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type lieu(lieuSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(mkRDV(lieu, h, m, s));
    return rcpp_result_gen;
END_RCPP
}
// getLieu
std::string getLieu(XPtr<rdv> xpRDV);
RcppExport SEXP _introRcppObjets_getLieu(SEXP xpRDVSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr<rdv> >::type xpRDV(xpRDVSEXP);
    rcpp_result_gen = Rcpp::wrap(getLieu(xpRDV));
    return rcpp_result_gen;
END_RCPP
}
// getHeure
std::string getHeure(XPtr<rdv> xpRDV);
RcppExport SEXP _introRcppObjets_getHeure(SEXP xpRDVSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr<rdv> >::type xpRDV(xpRDVSEXP);
    rcpp_result_gen = Rcpp::wrap(getHeure(xpRDV));
    return rcpp_result_gen;
END_RCPP
}
// testHeure
void testHeure();
RcppExport SEXP _introRcppObjets_testHeure() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    testHeure();
    return R_NilValue;
END_RCPP
}
// testHeureAddition
void testHeureAddition();
RcppExport SEXP _introRcppObjets_testHeureAddition() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    testHeureAddition();
    return R_NilValue;
END_RCPP
}
// demoRDV
void demoRDV();
RcppExport SEXP _introRcppObjets_demoRDV() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    demoRDV();
    return R_NilValue;
END_RCPP
}
// demoTuple
void demoTuple();
RcppExport SEXP _introRcppObjets_demoTuple() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    demoTuple();
    return R_NilValue;
END_RCPP
}
// dodo_boucle
void dodo_boucle();
RcppExport SEXP _introRcppObjets_dodo_boucle() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    dodo_boucle();
    return R_NilValue;
END_RCPP
}
// dodo_construit_detruit
void dodo_construit_detruit();
RcppExport SEXP _introRcppObjets_dodo_construit_detruit() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    dodo_construit_detruit();
    return R_NilValue;
END_RCPP
}
// dodo_copie_reference
void dodo_copie_reference();
RcppExport SEXP _introRcppObjets_dodo_copie_reference() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    dodo_copie_reference();
    return R_NilValue;
END_RCPP
}
// dodo_move
void dodo_move();
RcppExport SEXP _introRcppObjets_dodo_move() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    dodo_move();
    return R_NilValue;
END_RCPP
}
// dodo_vecteur
void dodo_vecteur();
RcppExport SEXP _introRcppObjets_dodo_vecteur() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    dodo_vecteur();
    return R_NilValue;
END_RCPP
}
// dodo_vecteur2
void dodo_vecteur2();
RcppExport SEXP _introRcppObjets_dodo_vecteur2() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    dodo_vecteur2();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_introRcppObjets_mkDodo1", (DL_FUNC) &_introRcppObjets_mkDodo1, 2},
    {"_introRcppObjets_mkDodo2", (DL_FUNC) &_introRcppObjets_mkDodo2, 2},
    {"_introRcppObjets_printDodo1", (DL_FUNC) &_introRcppObjets_printDodo1, 1},
    {"_introRcppObjets_printDodo2", (DL_FUNC) &_introRcppObjets_printDodo2, 1},
    {"_introRcppObjets_mkRDV", (DL_FUNC) &_introRcppObjets_mkRDV, 4},
    {"_introRcppObjets_getLieu", (DL_FUNC) &_introRcppObjets_getLieu, 1},
    {"_introRcppObjets_getHeure", (DL_FUNC) &_introRcppObjets_getHeure, 1},
    {"_introRcppObjets_testHeure", (DL_FUNC) &_introRcppObjets_testHeure, 0},
    {"_introRcppObjets_testHeureAddition", (DL_FUNC) &_introRcppObjets_testHeureAddition, 0},
    {"_introRcppObjets_demoRDV", (DL_FUNC) &_introRcppObjets_demoRDV, 0},
    {"_introRcppObjets_demoTuple", (DL_FUNC) &_introRcppObjets_demoTuple, 0},
    {"_introRcppObjets_dodo_boucle", (DL_FUNC) &_introRcppObjets_dodo_boucle, 0},
    {"_introRcppObjets_dodo_construit_detruit", (DL_FUNC) &_introRcppObjets_dodo_construit_detruit, 0},
    {"_introRcppObjets_dodo_copie_reference", (DL_FUNC) &_introRcppObjets_dodo_copie_reference, 0},
    {"_introRcppObjets_dodo_move", (DL_FUNC) &_introRcppObjets_dodo_move, 0},
    {"_introRcppObjets_dodo_vecteur", (DL_FUNC) &_introRcppObjets_dodo_vecteur, 0},
    {"_introRcppObjets_dodo_vecteur2", (DL_FUNC) &_introRcppObjets_dodo_vecteur2, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_introRcppObjets(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
